{"ast":null,"code":"var _jsxFileName = \"/Users/remi/Desktop/Portfolio-main/frontend/src/components/Form/index.jsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport '../../styles/Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const sendEmail = async data => {\n    try {\n      const response = await fetch('http://localhost:3000/send-email', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      console.log(data);\n      if (response.ok) {\n        alert('Message envoyé avec succès !');\n      } else {\n        alert('Erreur lors de l\\'envoi du message');\n      }\n    } catch (error) {\n      console.error('Erreur: ', error);\n      alert('Erreur lors de l\\'envoi du message');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"white-section\",\n    id: \"contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"contact-form\",\n      onSubmit: handleSubmit(sendEmail),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"Nom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register('lastName', {\n          required: \"Nom est requis\",\n          maxLength: {\n            value: 20,\n            message: \"Le nom ne doit pas dépasser 20 caractères\"\n          },\n          pattern: {\n            value: /^[a-zA-Z\\s-]+$/,\n            message: 'Entrez un nom valide'\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.lastName.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"Pr\\xE9nom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register('firstName', {\n          required: \"Prénom est requis\",\n          maxLength: {\n            value: 20,\n            message: \"Le prénom ne doit pas dépasser 20 caractères\"\n          },\n          pattern: {\n            value: /^[a-zA-Z\\s-]+$/,\n            message: 'Entrez un prénom valide'\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.firstName.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"subject\",\n        children: \"Objet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register('subject', {\n          required: \"Objet est requis\",\n          maxLength: {\n            value: 30,\n            message: \"L'objet ne doit pas dépasser 30 caractères\"\n          },\n          pattern: {\n            value: /^[a-zA-Z\\s-.]+$/,\n            message: \"Entrez un objet valide\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), errors.subject && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.subject.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"message\",\n        children: \"Votre message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"form-message\",\n        ...register('message', {\n          required: \"Le message est requis\",\n          maxLength: {\n            value: 500,\n            message: \"Le message ne doit pas dépasser 500 caractères\"\n          },\n          pattern: {\n            value: /^[a-zA-Z0-9\\s-.?!_]+$/,\n            message: \"Entrez un message valide\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), errors.message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.message.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        id: \"form-submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"cSudtlZF25wA1QXS6hk7TRnoNuU=\", false, function () {\n  return [useForm];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useForm","jsxDEV","_jsxDEV","Form","_s","register","handleSubmit","formState","errors","sendEmail","data","response","fetch","method","headers","body","JSON","stringify","console","log","ok","alert","error","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","required","maxLength","value","message","pattern","lastName","firstName","subject","type","_c","$RefreshReg$"],"sources":["/Users/remi/Desktop/Portfolio-main/frontend/src/components/Form/index.jsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\nimport '../../styles/Form.css';\n\nfunction Form() {\n\n const { register, handleSubmit, formState: { errors } } = useForm();\n\n const sendEmail = async (data) => {\n    try {\n        const response = await fetch('http://localhost:3000/send-email', {\n            method : 'POST',\n            headers : {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data)\n        });\n        console.log(data);\n\n        if (response.ok) {\n            alert('Message envoyé avec succès !');\n        } else {\n            alert('Erreur lors de l\\'envoi du message');\n        }\n    } catch (error) {\n        console.error('Erreur: ', error);\n        alert('Erreur lors de l\\'envoi du message');\n    }\n }\n\n return (\n    <section className=\"white-section\" id=\"contact\">\n        <h2>Contact</h2>\n        <form id='contact-form' onSubmit={handleSubmit(sendEmail)}>\n            <label htmlFor=\"lastName\">Nom</label>\n            <input \n                {...register('lastName', \n                { \n                    required: \"Nom est requis\", \n                    maxLength: {\n                        value: 20,\n                        message: \"Le nom ne doit pas dépasser 20 caractères\"\n                    },\n                    pattern: { \n                        value: /^[a-zA-Z\\s-]+$/, \n                        message: 'Entrez un nom valide' \n                    } \n                })} \n            />\n            {errors.lastName && <p className=\"error\">{errors.lastName.message}</p>}\n\n            <label htmlFor=\"firstName\">Prénom</label>\n            <input \n                {...register('firstName', \n                { \n                    required: \"Prénom est requis\", \n                    maxLength: {\n                        value: 20,\n                        message: \"Le prénom ne doit pas dépasser 20 caractères\"\n                    },\n                    pattern: { \n                        value: /^[a-zA-Z\\s-]+$/, \n                        message: 'Entrez un prénom valide' \n                    } \n                })} \n            />\n            {errors.firstName && <p className=\"error\">{errors.firstName.message}</p>}\n\n            <label htmlFor=\"subject\">Objet</label>\n            <input \n                {...register('subject', \n                { \n                    required: \"Objet est requis\", \n                    maxLength: {\n                        value: 30,\n                        message: \"L'objet ne doit pas dépasser 30 caractères\"\n                    },\n                    pattern: { \n                        value: /^[a-zA-Z\\s-.]+$/, \n                        message: \"Entrez un objet valide\" \n                    } \n                })} \n            />\n            {errors.subject && <p className=\"error\">{errors.subject.message}</p>}\n\n            <label htmlFor=\"message\">Votre message</label>\n            <textarea \n                id='form-message' \n                {...register('message', \n                { \n                    required: \"Le message est requis\", \n                    maxLength: {\n                        value: 500,\n                        message: \"Le message ne doit pas dépasser 500 caractères\"\n                    },\n                    pattern: { \n                        value: /^[a-zA-Z0-9\\s-.?!_]+$/, \n                        message: \"Entrez un message valide\" \n                    } \n                })} \n            />\n            {errors.message && <p className=\"error\">{errors.message.message}</p>}\n\n            <input type=\"submit\" id=\"form-submit\" />\n        </form>\n    </section>\n );\n}\n\nexport default Form;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}